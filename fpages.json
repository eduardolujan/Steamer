[
    {
        "pk": 1, 
        "model": "flatpages.flatpage", 
        "fields": {
            "registration_required": false, 
            "title": "An effortless system for monitoring provisioning.", 
            "url": "/doc/steamer/", 
            "template_name": "", 
            "sites": [
                1
            ], 
            "content": "<h2 style=\"text-align: center;\">An effortless system for monitoring provisioning.</h2>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<h3 style=\"text-align: left;\">What it is.</h3>\r\n<p>&nbsp;</p>\r\n<p class=\"normalp\">Streamer is a django based tool for&nbsp;<strong>provisioning monitoring services across multiple nagios instances</strong>, it is an atempt to automate the management of large nagios instalations. It aims towards:</p>\r\n<ul class=\"normalp\">\r\n<li>Automating nagios configuration generation</li>\r\n<li>Centralize nagios config definitions.</li>\r\n<li>Automate nagios config deployment with rollback capabilities.</li>\r\n<li>Restfull api for quit integration.&nbsp;</li>\r\n<li>Import tools.&nbsp;</li>\r\n</ul>\r\n<div>&nbsp;</div>\r\n<h3>How it works</h3>\r\n<p class=\"normalp\">Steamer has a repository for all your nagios configs, which was originally based on the djagios project. Based on that data it generates the nagios configurations (solving dependencies) and pushes that config via ssh (using fabric). It has a simple web app for showing some basic information and for basic template based editing, a django-admin site, and a piston app which exposes all the admin functionallity.</p>\r\n<p>&nbsp;</p>\r\n<h3>Installation/configuration &nbsp;</h3>\r\n<p class=\"normalp\">Basically, you only need to:</p>\r\n<ol class=\"normalp\">\r\n<li><strong>Import a nagios config</strong> (or <strong>model your own one</strong> from scratch via the advanced admin interface or via the rest api.), once you get there you define the attribute \"Fab alloy deploy for each nagios main config file you want to export.\".</li>\r\n<li>Make sure that the user running the application is able to make <strong>passwordless key-based ssh</strong> connections to the hostnames defines in each deployable nagios config entry.</li>\r\n<li>Relate via the admin admin interface, each host to the target nagios config.</li>\r\n<li>Export the config, you can do so via the admin actions, django management commands or via the steamer Lite app.</li>\r\n</ol>\r\n<p class=\"normalp\">&nbsp;</p>\r\n<p class=\"normalp\">&nbsp;</p>\r\n<p class=\"normalp\">&nbsp;</p>\r\n<p class=\"normalp\">&nbsp;</p>", 
            "enable_comments": false
        }
    }
]